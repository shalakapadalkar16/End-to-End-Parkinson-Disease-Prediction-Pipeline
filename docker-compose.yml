version: '3.8'

services:
  airflow:
    container_name: airflow
    build: .
    image: parkinson_prediction_airflow
    ports:
      - "8080:8080"   # Expose the Airflow webserver on localhost:8080
    environment:
      - AIRFLOW__CORE__LOAD_EXAMPLES=False
      - AIRFLOW__CORE__EXECUTOR=SequentialExecutor
      - AIRFLOW__CORE__SQL_ALCHEMY_CONN=sqlite:////opt/airflow/airflow.db
      - MLFLOW_TRACKING_URI=file:/opt/airflow/mlruns  # Set tracking URI to a local directory
      - EMAIL=mrudulaacharya18@gmail.com
      - EMAIL_PASSWORD=lhwnkkhmvptmjghx
      - GOOGLE_APPLICATION_CREDENTIALS=/opt/airflow/sa-key.json
      - GCP_PROJECT_ID=driven-lore-443500-t9
      - GCP_REGION=us-central1
      - DOCKER_IMAGE_NAME=model-predict
      - GKE_CLUSTER_NAME=model-cluster
      - GCP_ZONE=us-central1-c
      - GKE_DEPLOYMENT_NAME=parkinson-model
      - GCP_ARTIFACT_REPO=model-registry-1
      - BUCKET_NAME=parkinsons_prediction_logs_bucket
      - DATA_BUCKET_NAME=parkinsons_prediction_data_bucket
      - SERVICE_ACCOUNT_EMAIL=sa-371@driven-lore-443500-t9.iam.gserviceaccount.com
      - DEPLOYMENT_FILE=/opt/airflow/deployment.yaml
    volumes:
      # - ./dags:/opt/airflow/dags   # Mount DAGs for easy updating
      # - ./logs:/opt/airflow/logs   # Optional: log persistence
      # - ./raw_data1:/opt/airflow/raw_data1       # Mount 'raw_data' folder
      # - ./motor_assessment:/opt/airflow/motor_assessment  # Mount 'motor_assessments' folder
      # - ./outputs:/opt/airflow/outputs # Mount 'output' folder
      # - ./models:/opt/airflow/models
      # - ./mlruns:/opt/airflow/mlruns # Mount mlruns folder for MLflow tracking
      - ./.dvc:/opt/airflow/.dvc          # Mount DVC metadata folder
      - ./.git:/opt/airflow/.git 
      - ./sa-key.json:/opt/airflow/sa-key.json
      - ./gcp_image:/opt/airflow/gcp_image
      - /var/run/docker.sock:/var/run/docker.sock
      - /Users/shalakapadalkar/.docker/config.json:/root/.docker/config.json
      - ./deployment.yaml:/opt/airflow/deployment.yaml
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080"]
      interval: 30s
      retries: 5
      start_period: 60s
      timeout: 5s
    entrypoint: ["/bin/bash", "-c", "  /opt/airflow/entrypoint.sh"]
    
